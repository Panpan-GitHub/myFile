1.变量的解构赋值
let [a,b,b] = [1,2,3]
let [a,[b],c] = [1,[2],3] 解构赋值要求两边模式相同

let [x,y = 'a'] = ['b'] 解构赋值允许设置默认值

注意：ES6使用严格的（===）判断一个位置是否有效

如果默认值是一个表达式，那么这个表达式是惰性求值的，即只有在用到的时候，才会求值。
function f() {
  console.log('aaa');
}

let [x = f()] = [1];

2.对象的解构赋值
let {foo,baz} = {foo:"a",baz:"b"}

嵌套解构
let obj = {
    p: [
      'Hello',
      { y: 'World' }
    ]
  };
  
  let { p: [x, { y }] } = obj;
  如果要为P赋值
  let {p,p:[x, { y }]} = obj